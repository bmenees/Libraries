<!-- For a good overview of Themes\Generic.xaml and setting default styles for a control see:
	http://blogs.magnatis.com/tim/dude-wheres-my-default-style -->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:m="clr-namespace:Menees.Windows.Presentation">
	<!-- WPF doesn't have a HyperlinkButton like SL does, so I'm creating one using this as a start:
	http://stackoverflow.com/questions/780426/link-button-in-wpf/3564706#3564706 -->
	<Style TargetType="{x:Type m:HyperlinkButton}" BasedOn="{StaticResource ResourceKey={x:Type Button}}">
		<Setter Property="Width" Value="Auto"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
		<Setter Property="Template">			
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<!-- We have to use this "plain" content presenter to prevent the text from being surrounded by button chrome. -->
					<ContentPresenter Content="{TemplateBinding Content}"
									  ContentTemplate="{TemplateBinding ContentTemplate}"
									  VerticalAlignment="{TemplateBinding VerticalAlignment}">
						<ContentPresenter.Resources>
							<Style TargetType="{x:Type TextBlock}">
								<Style.Triggers>
									<Trigger Property="IsMouseOver" Value="true">
										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" />
										<Setter Property="TextDecorations" Value="Underline" />
									</Trigger>
								</Style.Triggers>
							</Style>
						</ContentPresenter.Resources>
					</ContentPresenter>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type m:ExtendedCalendar}" BasedOn="{StaticResource {x:Type Calendar}}">
		<Style.Resources>
			<Style x:Key="CalendarItemStyle1" TargetType="{x:Type CalendarItem}">
				<Setter Property="FontSize" Value="{Binding FontSize, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type m:ExtendedCalendar}}}"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type CalendarItem}">
							<ControlTemplate.Resources>
								<DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
									<TextBlock FontWeight="Bold" HorizontalAlignment="Center" Text="{Binding}" VerticalAlignment="Center"/>
								</DataTemplate>
							</ControlTemplate.Resources>
							<Grid x:Name="PART_Root">
								<Grid.Resources>
									<SolidColorBrush x:Key="DisabledColor" Color="{DynamicResource {x:Static SystemColors.WindowColorKey}}" Opacity=".5"/>
								</Grid.Resources>
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="CommonStates">
										<VisualState x:Name="Normal"/>
										<VisualState x:Name="Disabled">
											<Storyboard>
												<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual"/>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
									Background="{TemplateBinding Background}" CornerRadius="1">
									<Border BorderBrush="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderThickness="2" CornerRadius="1">
										<DockPanel>
											<DockPanel.Resources>
												<ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
													<Grid Cursor="Hand">
														<VisualStateManager.VisualStateGroups>
															<VisualStateGroup x:Name="CommonStates">
																<VisualState x:Name="Normal"/>
																<VisualState x:Name="MouseOver">
																	<Storyboard>
																		<ColorAnimation Duration="0" To="{DynamicResource {x:Static SystemColors.HotTrackColorKey}}" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path"/>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Disabled">
																	<Storyboard>
																		<DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" Storyboard.TargetName="path"/>
																	</Storyboard>
																</VisualState>
															</VisualStateGroup>
														</VisualStateManager.VisualStateGroups>
														<Grid>
															<Path x:Name="path" Data="M288.75,232.25 L288.75,240.625 L283,236.625 z"
															  Fill="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"
															  HorizontalAlignment="Center" Stretch="Uniform" VerticalAlignment="Center"
															  Width="{TemplateBinding FontSize}" Height="{TemplateBinding FontSize}"/>
														</Grid>
													</Grid>
												</ControlTemplate>
												<ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
													<Grid Cursor="Hand">
														<VisualStateManager.VisualStateGroups>
															<VisualStateGroup x:Name="CommonStates">
																<VisualState x:Name="Normal"/>
																<VisualState x:Name="MouseOver">
																	<Storyboard>
																		<ColorAnimation Duration="0" To="{DynamicResource {x:Static SystemColors.HotTrackColorKey}}" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path"/>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Disabled">
																	<Storyboard>
																		<DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" Storyboard.TargetName="path"/>
																	</Storyboard>
																</VisualState>
															</VisualStateGroup>
														</VisualStateManager.VisualStateGroups>
														<Grid>
															<Path x:Name="path" Data="M282.875,231.875 L282.875,240.375 L288.625,236 z"
															  Fill="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"
															  HorizontalAlignment="Center" Stretch="Uniform" VerticalAlignment="Center"
															  Width="{TemplateBinding FontSize}" Height="{TemplateBinding FontSize}"/>
														</Grid>
													</Grid>
												</ControlTemplate>
												<ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
													<Grid Cursor="Hand">
														<VisualStateManager.VisualStateGroups>
															<VisualStateGroup x:Name="CommonStates">
																<VisualState x:Name="Normal"/>
																<VisualState x:Name="MouseOver">
																	<Storyboard>
																		<ColorAnimation Duration="0" To="{DynamicResource {x:Static SystemColors.HotTrackColorKey}}" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="buttonContent"/>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Disabled">
																	<Storyboard>
																		<DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="buttonContent"/>
																	</Storyboard>
																</VisualState>
															</VisualStateGroup>
														</VisualStateManager.VisualStateGroups>
														<ContentPresenter x:Name="buttonContent" ContentTemplate="{TemplateBinding ContentTemplate}"
																	  Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
																	  Margin="1,5,1,5" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
													</Grid>
												</ControlTemplate>
											</DockPanel.Resources>
											<DockPanel DockPanel.Dock="Top"
											Background="{Binding HeaderBrush, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type m:ExtendedCalendar}}}">
												<Button x:Name="PART_PreviousButton" Focusable="False" HorizontalAlignment="Left" Template="{StaticResource PreviousButtonTemplate}" Margin="6,0,0,0" DockPanel.Dock="Left"/>
												<Button x:Name="PART_NextButton" Focusable="False" HorizontalAlignment="Right" Template="{StaticResource NextButtonTemplate}" Margin="0,0,6,0" DockPanel.Dock="Right"/>
												<Button x:Name="PART_HeaderButton" FontWeight="Bold" Focusable="False" HorizontalAlignment="Center" Template="{StaticResource HeaderButtonTemplate}" VerticalAlignment="Center"/>
											</DockPanel>
											<!-- This outer grid is needed to make the PART_YearView show up correctly.
										Otherwise, the DockPanel messes up if it has two "Content-docked" parts. -->
											<Grid>
												<Grid x:Name="PART_MonthView" Visibility="Visible" Background="{TemplateBinding Background}">
													<Grid.ColumnDefinitions>
														<ColumnDefinition/>
														<ColumnDefinition/>
														<ColumnDefinition/>
														<ColumnDefinition/>
														<ColumnDefinition/>
														<ColumnDefinition/>
														<ColumnDefinition/>
													</Grid.ColumnDefinitions>
													<Grid.RowDefinitions>
														<RowDefinition/>
														<RowDefinition/>
														<RowDefinition/>
														<RowDefinition/>
														<RowDefinition/>
														<RowDefinition/>
														<RowDefinition/>
													</Grid.RowDefinitions>
												</Grid>
												<Grid x:Name="PART_YearView" Visibility="Hidden" Background="{TemplateBinding Background}">
													<Grid.ColumnDefinitions>
														<ColumnDefinition/>
														<ColumnDefinition/>
														<ColumnDefinition/>
														<ColumnDefinition/>
													</Grid.ColumnDefinitions>
													<Grid.RowDefinitions>
														<RowDefinition/>
														<RowDefinition/>
														<RowDefinition/>
													</Grid.RowDefinitions>
												</Grid>
											</Grid>
										</DockPanel>
									</Border>
								</Border>
								<Rectangle x:Name="PART_DisabledVisual" Fill="{StaticResource DisabledColor}" Opacity="0" RadiusY="2" RadiusX="2" Stretch="Fill"
									   Stroke="{StaticResource DisabledColor}" StrokeThickness="1" Visibility="Collapsed"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsEnabled" Value="False">
									<Setter Property="Visibility" TargetName="PART_DisabledVisual" Value="Visible"/>
								</Trigger>
								<DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type m:ExtendedCalendar}}}" Value="Year">
									<Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden"/>
									<Setter Property="Visibility" TargetName="PART_YearView" Value="Visible"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type m:ExtendedCalendar}}}" Value="Decade">
									<Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden"/>
									<Setter Property="Visibility" TargetName="PART_YearView" Value="Visible"/>
								</DataTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="CalendarDayButtonStyle1" TargetType="{x:Type CalendarDayButton}">
				<Setter Property="MinWidth" Value="1"/>
				<Setter Property="MinHeight" Value="1"/>
				<Setter Property="FontSize" Value="{Binding FontSize, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type m:ExtendedCalendar}}}"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type CalendarDayButton}">
							<Grid>
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="CommonStates">
										<VisualStateGroup.Transitions>
											<VisualTransition GeneratedDuration="0:0:0.1"/>
										</VisualStateGroup.Transitions>
										<VisualState x:Name="Normal"/>
										<VisualState x:Name="MouseOver">
											<Storyboard>
												<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightBackground"/>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="Pressed">
											<Storyboard>
												<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightBackground"/>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="Disabled">
											<Storyboard>
												<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightBackground"/>
												<DoubleAnimation Duration="0" To=".35" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="NormalText"/>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
									<VisualStateGroup x:Name="SelectionStates">
										<VisualStateGroup.Transitions>
											<VisualTransition GeneratedDuration="0"/>
										</VisualStateGroup.Transitions>
										<VisualState x:Name="Unselected"/>
										<VisualState x:Name="Selected">
											<Storyboard>
												<DoubleAnimation Duration="0" To=".75" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackground"/>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
									<VisualStateGroup x:Name="CalendarButtonFocusStates">
										<VisualStateGroup.Transitions>
											<VisualTransition GeneratedDuration="0"/>
										</VisualStateGroup.Transitions>
										<VisualState x:Name="CalendarButtonFocused">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DayButtonFocusVisual">
													<DiscreteObjectKeyFrame KeyTime="0">
														<DiscreteObjectKeyFrame.Value>
															<Visibility>Visible</Visibility>
														</DiscreteObjectKeyFrame.Value>
													</DiscreteObjectKeyFrame>
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="CalendarButtonUnfocused">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DayButtonFocusVisual">
													<DiscreteObjectKeyFrame KeyTime="0">
														<DiscreteObjectKeyFrame.Value>
															<Visibility>Collapsed</Visibility>
														</DiscreteObjectKeyFrame.Value>
													</DiscreteObjectKeyFrame>
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
									<VisualStateGroup x:Name="ActiveStates">
										<VisualStateGroup.Transitions>
											<VisualTransition GeneratedDuration="0"/>
										</VisualStateGroup.Transitions>
										<VisualState x:Name="Active"/>
										<VisualState x:Name="Inactive">
											<Storyboard>
												<ColorAnimation Duration="0" To="{DynamicResource {x:Static SystemColors.ControlDarkColorKey}}" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="NormalText"/>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
									<VisualStateGroup x:Name="DayStates">
										<VisualStateGroup.Transitions>
											<VisualTransition GeneratedDuration="0"/>
										</VisualStateGroup.Transitions>
										<VisualState x:Name="RegularDay"/>
										<VisualState x:Name="Today">
											<Storyboard>
												<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TodayBackground"/>
												<ColorAnimation Duration="0" To="{DynamicResource {x:Static SystemColors.WindowColorKey}}" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="NormalText"/>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
									<VisualStateGroup x:Name="BlackoutDayStates">
										<VisualStateGroup.Transitions>
											<VisualTransition GeneratedDuration="0"/>
										</VisualStateGroup.Transitions>
										<VisualState x:Name="NormalDay"/>
										<VisualState x:Name="BlackoutDay">
											<Storyboard>
												<DoubleAnimation Duration="0" To=".2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Blackout"/>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
								<Rectangle x:Name="TodayBackground" Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Opacity="0" RadiusY="1" RadiusX="1"/>
								<Rectangle x:Name="SelectedBackground" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Opacity="0" RadiusY="1" RadiusX="1"/>
								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
								<Rectangle x:Name="HighlightBackground" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Opacity="0" RadiusY="1" RadiusX="1"/>
								<ContentPresenter x:Name="NormalText" TextBlock.FontSize="{TemplateBinding FontSize}" TextElement.Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
								<Path x:Name="Blackout" Data="M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z"
								  Fill="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" HorizontalAlignment="Stretch"
								  Margin="1" Opacity="0" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Stretch"/>
								<Rectangle x:Name="DayButtonFocusVisual" IsHitTestVisible="false" RadiusY="1" RadiusX="1"
								Stroke="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Visibility="Collapsed"/>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="CalendarButtonStyle1" TargetType="{x:Type CalendarButton}">
				<Setter Property="MinWidth" Value="1"/>
				<Setter Property="MinHeight" Value="1"/>
				<Setter Property="FontSize" Value="{Binding FontSize, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type m:ExtendedCalendar}}}"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type CalendarButton}">
							<Grid>
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="CommonStates">
										<VisualStateGroup.Transitions>
											<VisualTransition GeneratedDuration="0:0:0.1"/>
										</VisualStateGroup.Transitions>
										<VisualState x:Name="Normal"/>
										<VisualState x:Name="MouseOver">
											<Storyboard>
												<DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background"/>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="Pressed">
											<Storyboard>
												<DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background"/>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
									<VisualStateGroup x:Name="SelectionStates">
										<VisualStateGroup.Transitions>
											<VisualTransition GeneratedDuration="0"/>
										</VisualStateGroup.Transitions>
										<VisualState x:Name="Unselected"/>
										<VisualState x:Name="Selected">
											<Storyboard>
												<DoubleAnimation Duration="0" To=".75" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackground"/>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
									<VisualStateGroup x:Name="ActiveStates">
										<VisualStateGroup.Transitions>
											<VisualTransition GeneratedDuration="0"/>
										</VisualStateGroup.Transitions>
										<VisualState x:Name="Active"/>
										<VisualState x:Name="Inactive">
											<Storyboard>
												<ColorAnimation Duration="0" To="{DynamicResource {x:Static SystemColors.ControlDarkColorKey}}" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="NormalText"/>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
									<VisualStateGroup x:Name="CalendarButtonFocusStates">
										<VisualStateGroup.Transitions>
											<VisualTransition GeneratedDuration="0"/>
										</VisualStateGroup.Transitions>
										<VisualState x:Name="CalendarButtonFocused">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CalendarButtonFocusVisual">
													<DiscreteObjectKeyFrame KeyTime="0">
														<DiscreteObjectKeyFrame.Value>
															<Visibility>Visible</Visibility>
														</DiscreteObjectKeyFrame.Value>
													</DiscreteObjectKeyFrame>
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="CalendarButtonUnfocused">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CalendarButtonFocusVisual">
													<DiscreteObjectKeyFrame KeyTime="0">
														<DiscreteObjectKeyFrame.Value>
															<Visibility>Collapsed</Visibility>
														</DiscreteObjectKeyFrame.Value>
													</DiscreteObjectKeyFrame>
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
								<Rectangle x:Name="SelectedBackground" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Opacity="0" RadiusY="1" RadiusX="1"/>
								<Rectangle x:Name="Background" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Opacity="0" RadiusY="1" RadiusX="1"/>
								<ContentPresenter x:Name="NormalText" TextBlock.FontSize="{TemplateBinding FontSize}" TextElement.Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
								<Rectangle x:Name="CalendarButtonFocusVisual" IsHitTestVisible="false" RadiusY="1" RadiusX="1"
									   Stroke="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Visibility="Collapsed"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsFocused" Value="True">
									<Setter Property="Visibility" TargetName="CalendarButtonFocusVisual" Value="Visible"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</Style.Resources>

		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
		<Setter Property="CalendarDayButtonStyle" Value="{DynamicResource CalendarDayButtonStyle1}" />
		<Setter Property="CalendarItemStyle" Value="{DynamicResource CalendarItemStyle1}" />
		<Setter Property="CalendarButtonStyle" Value="{DynamicResource CalendarButtonStyle1}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type m:ExtendedCalendar}">
					<DockPanel x:Name="PART_Root" HorizontalAlignment="Stretch">
						<CalendarItem x:Name="PART_CalendarItem"
							BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}" Style="{TemplateBinding CalendarItemStyle}"
							Margin="{TemplateBinding Padding}" FontSize="{TemplateBinding FontSize}"/>
					</DockPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>